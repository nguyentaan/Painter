{"ast":null,"code":"var _jsxFileName = \"C:\\\\Thuchanh\\\\Painter\\\\frontend\\\\src\\\\components\\\\Layout\\\\DefautLayout\\\\index.js\",\n  _s = $RefreshSig$();\nimport Header from \"./Header\";\nimport SubHeader from \"./SubHeader\";\nimport Home from \"../../../pages/Home\";\nimport Edit from \"../../../pages/Edit\";\nimport styles from \"./DefaultLayout.module.scss\";\nimport classNames from 'classnames/bind';\nimport { createContext, useState } from 'react';\nimport { useUser } from \"../../../hook/UserContext\"; // Import the useUser hook\nimport useSharedState from \"../../../hook/useShareState\";\n// import axios from 'axios';\nimport { connect } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst cx = classNames.bind(styles);\nexport const SizeContext = /*#__PURE__*/createContext();\nfunction DefaultLayout() {\n  _s();\n  const [selectedTool, setSelectedTool] = useState('brush');\n  const [brushWidth, setBrushWidth] = useState(5);\n  const [selectedColor, setSelectedColor] = useState('rgb(0,0,0)');\n  const [isClear, setIsClear] = useState(false);\n  const [isEdit] = useSharedState();\n  // const [isDraging, setIsDragging] = useState(false);\n\n  const [width, setWidth] = useState(1080);\n  const [height, setHeight] = useState(540);\n  const setSize = (newWidth, newHeight) => {\n    setWidth(newWidth);\n    setHeight(newHeight);\n  };\n  const {\n    userInfo,\n    logout\n  } = useUser(); // Use the useUser hook to get user, logout, and userInfo\n\n  const handleLogout = () => {\n    logout();\n  };\n  const handleDownloadImage = () => {\n    const canvas = document.getElementById('myCanvas');\n    if (canvas) {\n      const timestamp = new Date().getTime();\n      const randomString = Math.random().toString(36).substring(7);\n      // Combine timestamp and random string for a unique name\n      const fileName = `drawing_${timestamp}_${randomString}.jpg`;\n      // Get the Data URL of the canvas content as a JPEG image\n      const imageDataURL = canvas.toDataURL('image/jpeg');\n      //Create a temporary link element\n      const link = document.createElement('a');\n      link.href = imageDataURL;\n      link.download = fileName;\n      link.click();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(SizeContext.Provider, {\n    value: {\n      width,\n      height,\n      setWidth,\n      setHeight,\n      setSize\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: cx('wrapper'),\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        userInfo: userInfo,\n        handleLogout: handleLogout,\n        handleDownloadImage: handleDownloadImage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(SubHeader, {\n        selectedTool: selectedTool,\n        setSelectedTool: setSelectedTool,\n        brushWidth: brushWidth,\n        setBrushWidth: setBrushWidth,\n        setSelectedColor: setSelectedColor,\n        setIsClear: setIsClear\n        // setIsDragging={setIsDragging}\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: cx('container'),\n        children: isEdit ? /*#__PURE__*/_jsxDEV(Edit, {\n          userInfo: userInfo,\n          selectedTool: selectedTool,\n          brushWidth: brushWidth,\n          selectedColor: selectedColor,\n          width: width,\n          height: height,\n          isClear: isClear,\n          setIsClear: setIsClear\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(Home, {\n          userInfo: userInfo,\n          selectedTool: selectedTool,\n          brushWidth: brushWidth,\n          selectedColor: selectedColor,\n          width: width,\n          height: height,\n          isClear: isClear,\n          setIsClear: setIsClear\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n}\n_s(DefaultLayout, \"O0cY5BeJnGBjSlF9Vl8S4iAOu4I=\", false, function () {\n  return [useSharedState, useUser];\n});\n_c = DefaultLayout;\nconst mapStateToProps = state => {\n  return {\n    tokenUser: state.LoginReducer.tokenUser\n  };\n};\nconst mapDispatchToProps = {\n  userLogout\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(DefaultLayout);\nvar _c;\n$RefreshReg$(_c, \"DefaultLayout\");","map":{"version":3,"names":["Header","SubHeader","Home","Edit","styles","classNames","createContext","useState","useUser","useSharedState","connect","jsxDEV","_jsxDEV","cx","bind","SizeContext","DefaultLayout","_s","selectedTool","setSelectedTool","brushWidth","setBrushWidth","selectedColor","setSelectedColor","isClear","setIsClear","isEdit","width","setWidth","height","setHeight","setSize","newWidth","newHeight","userInfo","logout","handleLogout","handleDownloadImage","canvas","document","getElementById","timestamp","Date","getTime","randomString","Math","random","toString","substring","fileName","imageDataURL","toDataURL","link","createElement","href","download","click","Provider","value","children","className","_jsxFileName","lineNumber","columnNumber","_c","mapStateToProps","state","tokenUser","LoginReducer","mapDispatchToProps","userLogout","$RefreshReg$"],"sources":["C:/Thuchanh/Painter/frontend/src/components/Layout/DefautLayout/index.js"],"sourcesContent":["import Header from '~/components/Layout/DefautLayout/Header';\r\nimport SubHeader from '~/components/Layout/DefautLayout/SubHeader';\r\nimport Home from '~/pages/Home';\r\nimport Edit from '~/pages/Edit';\r\nimport styles from './DefaultLayout.module.scss';\r\nimport classNames from 'classnames/bind';\r\nimport { createContext, useState } from 'react';\r\nimport { useUser } from '../../../hook/UserContext'; // Import the useUser hook\r\nimport useSharedState from '~/hook/useShareState';\r\n// import axios from 'axios';\r\nimport { connect } from \"react-redux\";\r\n\r\nconst cx = classNames.bind(styles);\r\n\r\nexport const SizeContext = createContext();\r\n\r\nfunction DefaultLayout() {\r\n    const [selectedTool, setSelectedTool] = useState('brush');\r\n    const [brushWidth, setBrushWidth] = useState(5);\r\n    const [selectedColor, setSelectedColor] = useState('rgb(0,0,0)');\r\n    const [isClear, setIsClear] = useState(false);\r\n    const [isEdit] = useSharedState();\r\n    // const [isDraging, setIsDragging] = useState(false);\r\n\r\n    const [width, setWidth] = useState(1080);\r\n    const [height, setHeight] = useState(540);\r\n\r\n    const setSize = (newWidth, newHeight) => {\r\n        setWidth(newWidth);\r\n        setHeight(newHeight);\r\n    };\r\n\r\n    const { userInfo, logout } = useUser(); // Use the useUser hook to get user, logout, and userInfo\r\n\r\n    const handleLogout = () => {\r\n        logout();\r\n    };\r\n\r\n    const handleDownloadImage = () => {\r\n        const canvas = document.getElementById('myCanvas');\r\n        if (canvas) {\r\n            const timestamp = new Date().getTime();\r\n            const randomString = Math.random().toString(36).substring(7);\r\n            // Combine timestamp and random string for a unique name\r\n            const fileName = `drawing_${timestamp}_${randomString}.jpg`;\r\n            // Get the Data URL of the canvas content as a JPEG image\r\n            const imageDataURL = canvas.toDataURL('image/jpeg');\r\n            //Create a temporary link element\r\n            const link = document.createElement('a');\r\n            link.href = imageDataURL;\r\n            link.download = fileName;\r\n            link.click();\r\n        }\r\n    };\r\n\r\n    return (\r\n        <SizeContext.Provider value={{ width, height, setWidth, setHeight, setSize }}>\r\n            <div className={cx('wrapper')}>\r\n                <Header userInfo={userInfo} handleLogout={handleLogout} handleDownloadImage={handleDownloadImage} />\r\n                <SubHeader\r\n                    selectedTool={selectedTool}\r\n                    setSelectedTool={setSelectedTool}\r\n                    brushWidth={brushWidth}\r\n                    setBrushWidth={setBrushWidth}\r\n                    setSelectedColor={setSelectedColor}\r\n                    setIsClear={setIsClear}\r\n                    // setIsDragging={setIsDragging}\r\n                />\r\n                <div className={cx('container')}>\r\n                    {isEdit ? (\r\n                        <Edit\r\n                            userInfo={userInfo}\r\n                            selectedTool={selectedTool}\r\n                            brushWidth={brushWidth}\r\n                            selectedColor={selectedColor}\r\n                            width={width}\r\n                            height={height}\r\n                            isClear={isClear}\r\n                            setIsClear={setIsClear}\r\n                        />\r\n                    ) : (\r\n                        <Home\r\n                            userInfo={userInfo}\r\n                            selectedTool={selectedTool}\r\n                            brushWidth={brushWidth}\r\n                            selectedColor={selectedColor}\r\n                            width={width}\r\n                            height={height}\r\n                            isClear={isClear}\r\n                            setIsClear={setIsClear}\r\n                        />\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </SizeContext.Provider>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n      tokenUser: state.LoginReducer.tokenUser,\r\n    };\r\n  };\r\n  \r\n  const mapDispatchToProps = {\r\n    userLogout,\r\n  };\r\n  export default connect(mapStateToProps, mapDispatchToProps)(DefaultLayout);\r\n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}