{"ast":null,"code":"import axios from \"axios\";\n\n//Production\n// const url = 'https://backendpainter-v1.onrender.com';\n//Testing\nconst url = 'http://localhost:8081';\nexport const loginUser = data => {\n  return async dispatch => {\n    try {\n      const response = await axios.post(`${url}/login`, data);\n      const output = response.data;\n      consolo;\n      if (output.status === \"success\") {\n        dispatch({\n          type: \"LOGIN_USER_SUCCESS\",\n          payload: output.token\n        });\n      }\n    } catch (error) {\n      const output = error.response.data;\n      dispatch({\n        type: \"LOGIN_USER_FAILED\",\n        payload: output.error\n      });\n    }\n  };\n};\nexport const registerUser = data => {\n  return async dispatch => {\n    try {\n      const response = await axios.post(`${url}/register`, data);\n      console.log(response);\n      const output = response.data;\n      if (output.status === \"success\") {\n        dispatch({\n          type: \"REGISTER_USER_SUCCESS\",\n          payload: output.message\n        });\n      }\n    } catch (error) {\n      const output = error.response.data;\n      if (output.message) {\n        dispatch({\n          type: \"REGISTER_USER_FAIL\",\n          payload: output.message\n        });\n      } else {\n        dispatch({\n          // error of same username/email/phoneNumber,it has to be unique no duplication/same username.\n          type: \"REGISTER_USER_INVALID\",\n          payload: output.error\n        });\n      }\n    }\n  };\n};\nexport const userLogout = () => {\n  return dispatch => {\n    dispatch({\n      type: \"LOGOUT_USER\"\n    });\n  };\n};","map":{"version":3,"names":["axios","url","loginUser","data","dispatch","response","post","output","consolo","status","type","payload","token","error","registerUser","console","log","message","userLogout"],"sources":["C:/Thuchanh/Painter/frontend/src/actionCreators/LoginAction.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\n//Production\r\n// const url = 'https://backendpainter-v1.onrender.com';\r\n//Testing\r\nconst url = 'http://localhost:8081';\r\n\r\n\r\nexport const loginUser = (data) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const response = await axios.post(`${url}/login`, data);\r\n      const output = response.data;\r\n      consolo\r\n      if (output.status === \"success\") {\r\n        dispatch({\r\n          type: \"LOGIN_USER_SUCCESS\",\r\n          payload: output.token,\r\n        });\r\n        \r\n      }\r\n    } catch (error) {\r\n      const output = error.response.data;\r\n      dispatch({\r\n        type: \"LOGIN_USER_FAILED\",\r\n        payload: output.error,\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const registerUser = (data) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const response = await axios.post(`${url}/register`, data);\r\n      console.log(response);\r\n\r\n      const output = response.data;\r\n      if (output.status === \"success\") {\r\n        dispatch({\r\n          type: \"REGISTER_USER_SUCCESS\",\r\n          payload: output.message,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      const output = error.response.data;\r\n      if (output.message) {\r\n        dispatch({\r\n          type: \"REGISTER_USER_FAIL\",\r\n          payload: output.message,\r\n        });\r\n      } else {\r\n        dispatch({\r\n          // error of same username/email/phoneNumber,it has to be unique no duplication/same username.\r\n          type: \"REGISTER_USER_INVALID\",\r\n          payload: output.error,\r\n        });\r\n      }\r\n    }\r\n  };\r\n};\r\n\r\nexport const userLogout = () => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: \"LOGOUT_USER\",\r\n    });\r\n  };\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA;AACA;AACA,MAAMC,GAAG,GAAG,uBAAuB;AAGnC,OAAO,MAAMC,SAAS,GAAIC,IAAI,IAAK;EACjC,OAAO,MAAOC,QAAQ,IAAK;IACzB,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAML,KAAK,CAACM,IAAI,CAAE,GAAEL,GAAI,QAAO,EAAEE,IAAI,CAAC;MACvD,MAAMI,MAAM,GAAGF,QAAQ,CAACF,IAAI;MAC5BK,OAAO;MACP,IAAID,MAAM,CAACE,MAAM,KAAK,SAAS,EAAE;QAC/BL,QAAQ,CAAC;UACPM,IAAI,EAAE,oBAAoB;UAC1BC,OAAO,EAAEJ,MAAM,CAACK;QAClB,CAAC,CAAC;MAEJ;IACF,CAAC,CAAC,OAAOC,KAAK,EAAE;MACd,MAAMN,MAAM,GAAGM,KAAK,CAACR,QAAQ,CAACF,IAAI;MAClCC,QAAQ,CAAC;QACPM,IAAI,EAAE,mBAAmB;QACzBC,OAAO,EAAEJ,MAAM,CAACM;MAClB,CAAC,CAAC;IACJ;EACF,CAAC;AACH,CAAC;AAED,OAAO,MAAMC,YAAY,GAAIX,IAAI,IAAK;EACpC,OAAO,MAAOC,QAAQ,IAAK;IACzB,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAML,KAAK,CAACM,IAAI,CAAE,GAAEL,GAAI,WAAU,EAAEE,IAAI,CAAC;MAC1DY,OAAO,CAACC,GAAG,CAACX,QAAQ,CAAC;MAErB,MAAME,MAAM,GAAGF,QAAQ,CAACF,IAAI;MAC5B,IAAII,MAAM,CAACE,MAAM,KAAK,SAAS,EAAE;QAC/BL,QAAQ,CAAC;UACPM,IAAI,EAAE,uBAAuB;UAC7BC,OAAO,EAAEJ,MAAM,CAACU;QAClB,CAAC,CAAC;MACJ;IACF,CAAC,CAAC,OAAOJ,KAAK,EAAE;MACd,MAAMN,MAAM,GAAGM,KAAK,CAACR,QAAQ,CAACF,IAAI;MAClC,IAAII,MAAM,CAACU,OAAO,EAAE;QAClBb,QAAQ,CAAC;UACPM,IAAI,EAAE,oBAAoB;UAC1BC,OAAO,EAAEJ,MAAM,CAACU;QAClB,CAAC,CAAC;MACJ,CAAC,MAAM;QACLb,QAAQ,CAAC;UACP;UACAM,IAAI,EAAE,uBAAuB;UAC7BC,OAAO,EAAEJ,MAAM,CAACM;QAClB,CAAC,CAAC;MACJ;IACF;EACF,CAAC;AACH,CAAC;AAED,OAAO,MAAMK,UAAU,GAAGA,CAAA,KAAM;EAC9B,OAAQd,QAAQ,IAAK;IACnBA,QAAQ,CAAC;MACPM,IAAI,EAAE;IACR,CAAC,CAAC;EACJ,CAAC;AACH,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}